// Copyright 2023 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Cluster configuration for a simple testbench system.
{
    nr_s1_quadrant: 1,
    s1_quadrant: {
        nr_clusters: 1,
    },

    cluster: {
        name: snax_KUL_cluster
        bender_target: 
        [
            snax_KUL_cluster
        ],
        boot_addr: 4096, // 0x1000
        cluster_base_addr: 268435456, // 0x1000_0000
        cluster_base_offset: 4194304,  // 4MB
        cluster_base_hartid: 0,
        addr_width: 48,
        data_width: 64,
        user_width: 3,
        tcdm: {
            size: 128,
            banks: 32,
        },
        cluster_periph_size: 64, // kB
        zero_mem_size: 64, // kB
        dma_data_width: 512,
        dma_axi_req_fifo_depth: 16,
        dma_req_fifo_depth: 8,

        // Observable pins parameter
        observable_pin_width: 8,

        // Additional parameters for Hemaia integration
        narrow_trans: 4,
        wide_trans: 32,
        dma_user_width: 1,
        // We don't need Snitch debugging in Hemaia
        enable_debug: false,
        // We don't need Snitch (core-internal) virtual memory support
        vm_support: false,
        // Memory configuration inputs
        sram_cfg_expose: true,
        sram_cfg_fields: {
            ema: 3,
            emaw: 2,
            emas: 1
        },
        snax_custom_tcdm_assign: {
            snax_enable_assign_tcdm_idx: true,
            snax_narrow_assign_start_idx: [0,56],
            snax_narrow_assign_end_idx: [7,71],
            snax_wide_assign_start_idx: [8],
            snax_wide_assign_end_idx: [55],
        },
        // AXI bandwidth switcher
        use_ax_bw_converter: true,
        converted_axi_bandwidth: 256,
        // Timing parameters
        timing: {
            lat_comp_fp32: 3,
            lat_comp_fp64: 3,
            lat_comp_fp16: 2,
            lat_comp_fp16_alt: 2,
            lat_comp_fp8: 1,
            lat_comp_fp8_alt: 1,
            lat_noncomp: 1,
            lat_conv: 1,
            lat_sdotp: 2,
            fpu_pipe_config: "BEFORE"
            narrow_xbar_latency: "CUT_ALL_PORTS",
            wide_xbar_latency: "CUT_ALL_PORTS",
            // Isolate the core.
            register_core_req: true,
            register_core_rsp: true,
            register_offload_req: true,
            register_offload_rsp: true,
            register_ext_narrow: true,
            register_ext_wide: true,
        },
        hives: [
            // Hive 0
            {
                icache: {
                    size: 8, // total instruction cache size in kByte
                    sets: 2, // number of ways
                    cacheline: 256 // word size in bits
                },
                cores: [
                    { $ref: "#/snax_streamer_gemmX_core_template" },
                    { $ref: "#/dma_core_template" },
                ]
            }
        ]
    },
    dram: {
        // 0x8000_0000
        address: 2147483648,
        // 0x8000_0000
        length: 2147483648
    },
    peripherals: {
        clint: {
            // 0xffff_0000
            address: 4294901760,
            // 0x0000_1000
            length: 4096
        },
    },
    // Templates.
    snax_streamer_gemmX_core_template: {
        isa: "rv32ima",
        xssr: false,
        xfrep: false,
        xdma: false,
        xf16: false,
        xf16alt: false,
        xf8: false,
        xf8alt: false,
        xfdotp: false,
        xfvec: false,
        snax_acc_cfg: [{
            snax_acc_name: "snax_streamer_gemmX",
            bender_target: ["snax_gemmX"],
            snax_narrow_tcdm_ports: 8,
            snax_wide_tcdm_ports: 48,
            snax_num_rw_csr: 19,
            snax_num_ro_csr: 2,
            snax_gemmx_mesh_row: 8,
            snax_gemmx_tile_size: 8,
            snax_gemmx_mesh_col: 8,
            snax_gemmx_serial_c32_d32_width: 2048,
            snax_gemmx_serial_d8_width: 512,
            with_pipeline: true,
            snax_streamer_cfg: {$ref: "#/snax_streamer_gemmX_streamer_template" }
        }],
        snax_use_custom_ports: false,
        num_int_outstanding_loads: 1,
        num_int_outstanding_mem: 4,
        num_fp_outstanding_loads: 4,
        num_fp_outstanding_mem: 4,
        num_sequencer_instructions: 16,
        num_dtlb_entries: 1,
        num_itlb_entries: 1,
        // Enable division/square root unit
        // Xdiv_sqrt: true,
    },
    // Templates.
    dma_core_template: {
        isa: "rv32ima",
        snax_xdma_cfg: {
            bender_target: ["snax_KUL_cluster_xdma"],
            // Cross Cluster Calling Cfg
            max_multicast: 25,
            max_dimension: 5,
            max_mem_size: 4096,
            // DataMaestro Cfg
            reader_buffer: 12, 
            writer_buffer: 12, 
            reader_agu_temporal_dimension: 5,
            writer_agu_temporal_dimension: 5,
            // Extension Cfg
            writer_extensions: {
                HasVerilogMemset: {},
                HasTransposer: {row:[8, 8], col:[8, 8], elementWidth:[8, 16]},
                HasSoftMax: {}
            },
            reader_extensions: {
                HasMaxPool: {},
                HasElementwiseAdd: {},
                HasElementwiseAddToLong: {},
                HasRescaleDownEfficient: {},
                HasRescaleUp: {},

            }
        },
        // Xdiv_sqrt: true,
        # isa: "rv32ema",
        xdma: true
        xssr: false
        xfrep: false
        xf16: false,
        xf16alt: false,
        xf8: false,
        xf8alt: false,
        xfdotp: false,
        xfvec: false,
        num_int_outstanding_loads: 1,
        num_int_outstanding_mem: 4,
        num_fp_outstanding_loads: 4,
        num_fp_outstanding_mem: 4,
        num_sequencer_instructions: 16,
        num_dtlb_entries: 1,
        num_itlb_entries: 1,
    },
    // SNAX Streamer Templates
    snax_streamer_gemmX_streamer_template :{

        data_reader_params: {
            spatial_bounds: [[8], [8]],
            temporal_dim: [6, 3],
            num_channel: [8, 8],
            fifo_depth: [8, 8],
            configurable_channel: [0, 0],
            tcdm_logic_word_size: [[256, 128, 64], [256, 128, 64]],
            datapath_extensions: [{HasTransposer: {row:[8], col:[8], elementWidth:[8]}}, {HasTransposer: {row:[8], col:[8], elementWidth:[8]}}]
        },

        data_writer_params:{
            spatial_bounds: [[8]],
            temporal_dim: [3],
            num_channel: [8],
            fifo_depth: [1],
            configurable_channel: [0],
            tcdm_logic_word_size: [[256, 128, 64]],
        },

        data_reader_writer_params:{
            spatial_bounds: [[8, 4], [8, 4]],
            temporal_dim: [3, 3],
            num_channel: [32, 32],
            fifo_depth: [1, 1],
            configurable_channel: [1, 0],
            tcdm_logic_word_size: [[256, 128, 64], [256, 128, 64]],
            datapath_extensions: [{HasBroadcaster: {inputLength: 256, outputLength: 2048}}, {}]
        },

        # needs to be ketp for csr num calculation in snax_gen.py
        has_transpose: true,

        has_C_broadcast: true,

        snax_library_name: "gemmx",
    }
}
