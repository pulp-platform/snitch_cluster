# Copyright 2023 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  # Enable colors in CI terminal
  TERM: ansi
  FORCE_COLOR: 1
  # Configure environment
  CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER: /usr/pack/gcc-9.2.0-af/linux-x64/bin/gcc
  LLVM_SYS_120_PREFIX: /usr/pack/llvm-12.0.1-af
  CMAKE: cmake-3.18.1

before_script:
  source iis-setup.sh

##############
# Build docs #
##############

docs:
  script:
    - make docs

#####################
# Python unit tests #
#####################

pytest:
  script:
    - pytest

#################################
# Build Snitch cluster software #
#################################

snitch-cluster-sw:
  script:
    - cd target/snitch_cluster
    - make sw
  artifacts:
    paths:
      - target/snitch_cluster/sw/**/build/*.elf
    expire_in: 1 day

snitch-cluster-sw-banshee:
  script:
    - cd target/snitch_cluster
    - make SELECT_RUNTIME=banshee sw
  artifacts:
    paths:
      - target/snitch_cluster/sw/**/build/*.elf
    expire_in: 1 day

#######################
# Standalone IP tests #
#######################

# Build and run all individual IP testbenches.
# Currently missing IP tests:
# - snitch_vm
# - snitch_ipu
# - snitch_dma
# - snitch
snitch-ip-tests:
  needs: []
  parallel:
    matrix:
      - IP:
          - mem_interface
          - snitch_cluster
          - tcdm_interface
          - snitch_ssr
          - reqrsp_interface
  script:
    - cd hw/$IP
    - ./util/compile.sh
    - ./util/run_vsim.sh

########################
# Snitch cluster tests #
########################

# Verilator
snitch-cluster-vlt:
  needs: [snitch-cluster-sw]
  script:
    - cd target/snitch_cluster
    - make bin/snitch_cluster.vlt
    - ./util/run.py sw/run.yaml --simulator verilator -j --run-dir runs/vlt

# VCS
snitch-cluster-vcs:
  needs: [snitch-cluster-sw]
  script:
    - cd target/snitch_cluster
    - make bin/snitch_cluster.vcs
    - ./util/run.py sw/run.yaml --simulator vcs -j --run-dir runs/vcs

# Questa
snitch-cluster-vsim:
  needs: [snitch-cluster-sw]
  script:
    - cd target/snitch_cluster
    - make bin/snitch_cluster.vsim
    - ./util/run.py sw/run.yaml --simulator vsim -j --run-dir runs/vsim
    # Test trace annotation
    - make SIM_DIR=./runs/vsim/simple annotate -j
    # Run additional, more extensive tests
    - cd sw/apps/blas/gemm/test && ./test.sh && cd -
    - cd sw/apps/dnn/transpose/test && ./test.sh && cd -

# Banshee
snitch-cluster-banshee:
  needs: [snitch-cluster-sw-banshee]
  variables:
    SNITCH_LOG: info
  script:
    - rustup install 1.63.0
    - rustup override set 1.63.0
    - rustc --version
    - rustup --version
    - git clone git@github.com:pulp-platform/banshee.git --recurse-submodules
    - cd banshee
    - cargo install --debug --path .
    - cd ../target/snitch_cluster
    - ./util/run.py sw/run.yaml --simulator banshee -j --run-dir runs/banshee

# Tests requiring hardware FDIV unit
snitch-cluster-fdiv-vsim:
  script:
    - cd target/snitch_cluster
    - make CFG_OVERRIDE=cfg/fdiv.hjson sw
    - make bin/snitch_cluster.vsim
    - ./util/run.py sw/fdiv.yaml --simulator vsim -j --run-dir runs/vsim
    # Run additional, more extensive tests
    - cd sw/apps/dnn/flashattention_2/test && ./test.sh && cd -

# Test OmegaNet TCDM interconnect
snitch-cluster-omega-vsim:
  script:
    - cd target/snitch_cluster
    - make CFG_OVERRIDE=cfg/omega.hjson sw
    - make bin/snitch_cluster.vsim
    - ./util/run.py sw/run.yaml --simulator vsim -j --run-dir runs/vsim

# Test Multi-channel DMA
snitch-cluster-mchan-vsim:
  script:
    - cd target/snitch_cluster
    - make CFG_OVERRIDE=cfg/dma_mchan.hjson sw
    - make bin/snitch_cluster.vsim
    - ./util/run.py sw/dma_mchan.yaml --simulator vsim -j --run-dir runs/vsim

############
# Non-free #
############

nonfree:
  script:
    - make nonfree
    - make elab
