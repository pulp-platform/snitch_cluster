// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package snitch_cluster_peripheral_reg_pkg;

  // Param list
  parameter int NumPerfCounters = 16;

  // Address widths within the block
  parameter int BlockAw = 10;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic q;} snitch_cluster_peripheral_reg2hw_perf_counter_enable_mreg_t;

  typedef struct packed {
    logic [9:0] q;
    logic       qe;
  } snitch_cluster_peripheral_reg2hw_perf_counter_select_mreg_t;

  typedef struct packed {
    logic [9:0] q;
  } snitch_cluster_peripheral_reg2hw_perf_counter_hart_select_mreg_t;

  typedef struct packed {
    logic [47:0] q;
    logic        qe;
  } snitch_cluster_peripheral_reg2hw_perf_counter_mreg_t;

  typedef struct packed {
    logic [31:0] q;
    logic        qe;
  } snitch_cluster_peripheral_reg2hw_cl_clint_set_reg_t;

  typedef struct packed {
    logic [31:0] q;
    logic        qe;
  } snitch_cluster_peripheral_reg2hw_cl_clint_clear_reg_t;

  typedef struct packed {logic [31:0] q;} snitch_cluster_peripheral_reg2hw_hw_barrier_reg_t;

  typedef struct packed {logic q;} snitch_cluster_peripheral_reg2hw_icache_prefetch_enable_reg_t;

  typedef struct packed {
    logic [9:0] d;
  } snitch_cluster_peripheral_hw2reg_perf_counter_select_mreg_t;

  typedef struct packed {logic [47:0] d;} snitch_cluster_peripheral_hw2reg_perf_counter_mreg_t;

  typedef struct packed {logic [31:0] d;} snitch_cluster_peripheral_hw2reg_hw_barrier_reg_t;

  // Register -> HW type
  typedef struct packed {
    snitch_cluster_peripheral_reg2hw_perf_counter_enable_mreg_t [15:0] perf_counter_enable; // [1234:1219]
    snitch_cluster_peripheral_reg2hw_perf_counter_select_mreg_t [15:0] perf_counter_select; // [1218:1043]
    snitch_cluster_peripheral_reg2hw_perf_counter_hart_select_mreg_t [15:0] perf_counter_hart_select; // [1042:883]
    snitch_cluster_peripheral_reg2hw_perf_counter_mreg_t [15:0] perf_counter;  // [882:99]
    snitch_cluster_peripheral_reg2hw_cl_clint_set_reg_t cl_clint_set;  // [98:66]
    snitch_cluster_peripheral_reg2hw_cl_clint_clear_reg_t cl_clint_clear;  // [65:33]
    snitch_cluster_peripheral_reg2hw_hw_barrier_reg_t hw_barrier;  // [32:1]
    snitch_cluster_peripheral_reg2hw_icache_prefetch_enable_reg_t icache_prefetch_enable;  // [0:0]
  } snitch_cluster_peripheral_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    snitch_cluster_peripheral_hw2reg_perf_counter_select_mreg_t [15:0] perf_counter_select; // [959:800]
    snitch_cluster_peripheral_hw2reg_perf_counter_mreg_t [15:0] perf_counter;  // [799:32]
    snitch_cluster_peripheral_hw2reg_hw_barrier_reg_t hw_barrier;  // [31:0]
  } snitch_cluster_peripheral_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_OFFSET = 10'h0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_OFFSET = 10'h8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_OFFSET = 10'h10;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_OFFSET = 10'h18;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_OFFSET = 10'h20;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_OFFSET = 10'h28;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_OFFSET = 10'h30;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_OFFSET = 10'h38;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_OFFSET = 10'h40;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_OFFSET = 10'h48;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_OFFSET = 10'h50;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_OFFSET = 10'h58;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_OFFSET = 10'h60;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_OFFSET = 10'h68;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_OFFSET = 10'h70;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_OFFSET = 10'h78;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_0_OFFSET = 10'h80;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_1_OFFSET = 10'h88;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_2_OFFSET = 10'h90;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_3_OFFSET = 10'h98;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_4_OFFSET = 10'ha0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_5_OFFSET = 10'ha8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_6_OFFSET = 10'hb0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_7_OFFSET = 10'hb8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_8_OFFSET = 10'hc0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_9_OFFSET = 10'hc8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_10_OFFSET = 10'hd0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_11_OFFSET = 10'hd8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_12_OFFSET = 10'he0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_13_OFFSET = 10'he8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_14_OFFSET = 10'hf0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_15_OFFSET = 10'hf8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_0_OFFSET = 10'h 100;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_1_OFFSET = 10'h 108;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_2_OFFSET = 10'h 110;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_3_OFFSET = 10'h 118;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_4_OFFSET = 10'h 120;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_5_OFFSET = 10'h 128;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_6_OFFSET = 10'h 130;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_7_OFFSET = 10'h 138;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_8_OFFSET = 10'h 140;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_9_OFFSET = 10'h 148;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_10_OFFSET = 10'h 150;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_11_OFFSET = 10'h 158;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_12_OFFSET = 10'h 160;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_13_OFFSET = 10'h 168;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_14_OFFSET = 10'h 170;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_15_OFFSET = 10'h 178;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_OFFSET = 10'h180;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_OFFSET = 10'h188;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_OFFSET = 10'h190;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_OFFSET = 10'h198;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_OFFSET = 10'h1a0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_OFFSET = 10'h1a8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_OFFSET = 10'h1b0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_OFFSET = 10'h1b8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_OFFSET = 10'h1c0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_OFFSET = 10'h1c8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_OFFSET = 10'h1d0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_OFFSET = 10'h1d8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_OFFSET = 10'h1e0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_OFFSET = 10'h1e8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_OFFSET = 10'h1f0;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_OFFSET = 10'h1f8;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_OFFSET = 10'h200;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_OFFSET = 10'h208;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_OFFSET = 10'h210;
  parameter logic [BlockAw-1:0] SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_OFFSET = 10'h218;

  // Reset values for hwext registers and their fields
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_0_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_1_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_2_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_3_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_4_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_5_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_6_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_7_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_8_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_9_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_10_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_11_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_12_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_13_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_14_RESVAL = 10'h0;
  parameter logic [9:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_15_RESVAL = 10'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_RESVAL = 48'h0;
  parameter logic [47:0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_RESVAL = 48'h0;
  parameter logic [31:0] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_RESVAL = 32'h0;
  parameter logic [31:0] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_RESVAL = 32'h0;
  parameter logic [31:0] SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_RESVAL = 32'h0;

  // Register index
  typedef enum int {
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_0,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_1,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_2,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_3,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_4,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_5,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_6,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_7,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_8,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_9,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_10,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_11,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_12,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_13,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_14,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_15,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_0,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_1,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_2,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_3,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_4,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_5,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_6,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_7,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_8,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_9,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_10,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_11,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_12,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_13,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_14,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_15,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14,
    SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15,
    SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET,
    SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR,
    SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER,
    SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE
  } snitch_cluster_peripheral_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] SNITCH_CLUSTER_PERIPHERAL_PERMIT[68] = '{
      4'b0001,  // index[ 0] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0
      4'b0001,  // index[ 1] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1
      4'b0001,  // index[ 2] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2
      4'b0001,  // index[ 3] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3
      4'b0001,  // index[ 4] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4
      4'b0001,  // index[ 5] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5
      4'b0001,  // index[ 6] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6
      4'b0001,  // index[ 7] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7
      4'b0001,  // index[ 8] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8
      4'b0001,  // index[ 9] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9
      4'b0001,  // index[10] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10
      4'b0001,  // index[11] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11
      4'b0001,  // index[12] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12
      4'b0001,  // index[13] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13
      4'b0001,  // index[14] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14
      4'b0001,  // index[15] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15
      4'b0011,  // index[16] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_0
      4'b0011,  // index[17] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_1
      4'b0011,  // index[18] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_2
      4'b0011,  // index[19] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_3
      4'b0011,  // index[20] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_4
      4'b0011,  // index[21] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_5
      4'b0011,  // index[22] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_6
      4'b0011,  // index[23] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_7
      4'b0011,  // index[24] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_8
      4'b0011,  // index[25] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_9
      4'b0011,  // index[26] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_10
      4'b0011,  // index[27] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_11
      4'b0011,  // index[28] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_12
      4'b0011,  // index[29] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_13
      4'b0011,  // index[30] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_14
      4'b0011,  // index[31] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_SELECT_15
      4'b0011,  // index[32] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_0
      4'b0011,  // index[33] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_1
      4'b0011,  // index[34] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_2
      4'b0011,  // index[35] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_3
      4'b0011,  // index[36] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_4
      4'b0011,  // index[37] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_5
      4'b0011,  // index[38] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_6
      4'b0011,  // index[39] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_7
      4'b0011,  // index[40] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_8
      4'b0011,  // index[41] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_9
      4'b0011,  // index[42] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_10
      4'b0011,  // index[43] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_11
      4'b0011,  // index[44] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_12
      4'b0011,  // index[45] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_13
      4'b0011,  // index[46] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_14
      4'b0011,  // index[47] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_HART_SELECT_15
      4'b1111,  // index[48] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0
      4'b1111,  // index[49] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1
      4'b1111,  // index[50] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2
      4'b1111,  // index[51] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3
      4'b1111,  // index[52] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4
      4'b1111,  // index[53] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5
      4'b1111,  // index[54] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6
      4'b1111,  // index[55] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7
      4'b1111,  // index[56] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8
      4'b1111,  // index[57] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9
      4'b1111,  // index[58] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10
      4'b1111,  // index[59] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11
      4'b1111,  // index[60] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12
      4'b1111,  // index[61] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13
      4'b1111,  // index[62] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14
      4'b1111,  // index[63] SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15
      4'b1111,  // index[64] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET
      4'b1111,  // index[65] SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR
      4'b1111,  // index[66] SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER
      4'b0001  // index[67] SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE
  };

endpackage

